################
##### Builder
FROM rust:1.69-alpine3.17 as builder

RUN apk add git curl
RUN apk add pkgconfig openssl-dev gcc musl-dev rustup
RUN rustup-init -t x86_64-unknown-linux-musl --default-toolchain nightly --profile minimal -y
RUN git clone https://github.com/sfackler/rust-openssl /build

RUN cd /build && cargo build --release && cd ..

ADD --chown=rust:rust ./Cargo.toml ./

RUN mkdir -p ./src && touch ./src/main.rs && cargo fetch

ADD --chown=rust:rust ./src ./src

# This is a dummy build to get the dependencies cached.
RUN cargo build --target x86_64-unknown-linux-musl --release

################
##### Runtime
FROM alpine:3 AS runtime

ARG UID=1001
ARG USER=app
ARG GID=1001
ARG GROUP=app
ENV WORKINGDIR /app

EXPOSE 8080

RUN apk --no-cache add ca-certificates openssl

WORKDIR $WORKINGDIR
RUN addgroup -g $GID -S $GROUP && adduser -u $UID -S $USER -G $GROUP && \
    mkdir -p /app &&\
    chown -R $USER:$GROUP /app

# Copy application binary from builder image
#COPY --from=builder /build/target/x86_64-unknown-linux-musl/release/* /app/ssl
COPY --from=builder /target/x86_64-unknown-linux-musl/release/kostal-plenticore-rs /app

RUN ln -s /usr/lib/libcrypto.so.1.1 /usr/lib/libcrypto.so.3
RUN ln -s /usr/lib/libssl.so.1.1 /usr/lib/libssl.so.3

USER $USER
ENV RUST_LOG=info
ENV ROCKET_PORT=8080
ENV ROCKET_ADDRESS=0.0.0.0

# Run the application
CMD ./kostal-plenticore-rs